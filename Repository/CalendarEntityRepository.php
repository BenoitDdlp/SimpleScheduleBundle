<?php

namespace IDCI\Bundle\SimpleScheduleBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CalendarEntityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CalendarEntityRepository extends EntityRepository
{
    /**
     * getRelatedAvailableCalendarEntitiesQueryBuilder
     *
     * @param $entity CalendarEntity
     * @return QueryBuilder
     */
    public function getRelatedAvailableCalendarEntitiesQueryBuilder($entity = null)
    {
        $qb = $this->createQueryBuilder('cer');

        if($entity) {
            $ids = array();
            foreach($entity->getRelateds() as $related) {
                $ids[] = $related->getRelatedTo()->getId();
            }

            $qb
                ->where('cer.id not in (:entities_id)')
                ->setParameter('entities_id', array_merge(
                    array($entity->getId()),
                    $ids
                ))
            ;
        }

        $qb->orderBy('cer.startAt', 'ASC');

        return $qb;
    }

    /**
     * getRelatedAvailableCalendarEntitiesQuery
     *
     * @param $entity CalendarEntity
     * @return Query
     */
    public function getRelatedAvailableCalendarEntitiesQuery($entity = null)
    {
        $qb = $this->getRelatedAvailableCalendarEntitiesQueryBuilder($entity);

        return is_null($qb) ? $qb : $qb->getQuery();
    }

    /**
     * getRelatedAvailableCalendarEntities
     *
     * @param $entity CalendarEntity
     * @return DoctrineCollection
     */
    public function getRelatedAvailableCalendarEntities($entity = null)
    {
        $q = $this->getRelatedAvailableCalendarEntitiesQuery($entity);

        return is_null($q) ? array() : $q->getResult();
    }

    /**
     * getAllOrderByStartAtQueryBuilder
     *
     * @return QueryBuilder
     */
    public function getAllOrderByStartAtQueryBuilder()
    {
        $qb = $this->createQueryBuilder('cer');
        $qb->orderBy('cer.startAt', 'ASC');

        return $qb;
    }

    /**
     * getAllOrderByStartAtQuery
     *
     * @return Query
     */
    public function getAllOrderByStartAtQuery()
    {
        $qb = $this->getAllOrderByStartAtQueryBuilder();

        return is_null($qb) ? $qb : $qb->getQuery();
    }

    /**
     * getAllOrderByStartAt
     *
     * @return DoctrineCollection
     */
    public function getAllOrderByStartAt()
    {
        $q = $this->getAllOrderByStartAtQuery();

        return is_null($q) ? array() : $q->getResult();
    }

    /**
     * queryQueryBuilder
     *
     * @param array Parameters
     * @return QueryBuilder
     */
    public function queryQueryBuilder($params)
    {
        $qb = $this->createQueryBuilder('cer');

        return $qb;
    }

    /**
     * queryQuery
     *
     * @param array Parameters
     * @return Query
     */
    public function queryQuery($params)
    {
        $qb = $this->queryQueryBuilder($params);

        return is_null($qb) ? $qb : $qb->getQuery();
    }

    /**
     * query
     *
     * @param array Parameters
     * @return DoctrineCollection
     */
    public function query($params)
    {
        $q = $this->queryQuery($params);

        return is_null($q) ? array() : $q->getResult();
    }
}
